package variable;

public class Var8 {
    public static void main(String[] args) {
        //정수
        byte b = 127; //-128 ~ 127
        short s = 32767; // -32,768 ~ 32,767
        int i = 2147483647; //-2,147,483,648 ~ 2,147,483,647 (약 20억)

        long l = 9223372036854775807L;
        //-9,223,372,036,854,775,808 ~ 9,223,372,036,854,775,807

        //실수
        float f = 10.0f;
        double d = 10.0; // float 보다 정밀도가 높다.

        /*
        실무에서 자주 사용하는 타입
        1. 정수 - `int` , `long` : 자바는 정수에 기본으로 `int` 를 사용한다. 만약 20억이 넘을것 같으면 `long` 을 쓰면 된다.
            - 파일을 다룰 때는 `byte` 를 사용한다.
        2. 실수 - `double` : 실수는 `double` 을 쓰면 된다. float 는 double 보다 작아서 소수점 에러가 발생할수 있다.
        3. 불린형 - `boolean` : `true` , `false` 참 거짓을 표현한다. 이후 조건문에서 자주 사용된다.
        4. 문자열 - `String` : 문자를 다룰 때는 문자 하나든 문자열이든 모두 `String` 을 사용하는 것이 편리하다.
         */

        /*
        규칙은 필수 이다. 규칙을 지키지 않으면 컴파일 오류가 발생한다.
        관례는 필수는 아니지만 전세계 개발자가 해당 관례를 따르기 때문에 사실상 규칙이라고 생각해도 된다.

        1. 규칙
        변수 이름은 숫자로 시작할 수 없다. (예: `1num` , `1st` )
        그러나 숫자를 이름에 포함하는 것은 가능하다 (예: `myVar1` , `num1` ).
        이름에는 공백이 들어갈 수 없다.
        자바의 예약어를 변수 이름으로 사용할 수 없다. (예: `int` , `class` , `public` )
        변수 이름에는 영문자(`a-z` , `A-Z` ), 숫자(`0-9` ), 달러 기호(`$` ) 또는 밑줄(`_` )만 사용할 수 있다.

        2. 관례
        소문자로 시작하는 낙타 표기법
        변수 이름은 소문자로 시작하는 것이 일반적이다. 여러 단어로 이루어진 변수 이름의 경우,
        첫 번째 단어는 소문자로 시작하고 그 이후의 각 단어는 대문자로 시작하는 낙타 표기법(camel case)를 사용한다. (예:`orderDetail` , `myAccount` )

            - 낙타표기법(Camel Case)은 프로그래밍에서 변수, 함수, 클래스 등의 이름을 지을 때 많이 사용하는 표기법 중 하나이다.
            이 표기법의 이름은 작성한 이름이 여러 단어로 구성되어 있을 때, 각 단어의 첫 글자가 대문자로 시작 하고,
            이 대문자들이 낙타의 등봉처럼 보이는 것에서 유래했다.
            낙타표기법을 사용하면 이름에 공백을 넣지 않고 도 여러 단어를 쉽게 구분할 수 있으므로, 변수의 이름을 이해하기 쉽게 만들어준다.
            또한, 대부분의 프로그래밍 언어에서는 이름에 공백을 포함할 수 없기 때문에, 낙타표기법은 이런 제한을 우회하는 좋은 방법이다.

        ** 자바 언어의 관례 한번에 정리 **
        클래스는 대문자로 시작, 나머지는 소문자로 시작
        자바에서 클래스 이름의 첫 글자는 대문자로 시작한다. 그리고 나머지는 모두 첫 글자를 소문자로 시작한다. 여기 에 낙타 표기법을 적용하면 된다.
            예시: 클래스는 첫 글자 대문자, 나머지는 모두 첫 글자 소문자로 시작 + 낙타 표기법
            클래스: `Person` , `OrderDetail`
            변수를 포함한 나머지: `firstName` , `userAccount`

            여기에 예외가 딱 2개 있다.
            - 상수는 모두 대문자를 사용하고 언더바로 구분한다.
                `USER_LIMIT`
            - 패키지는 모두 소문자를 사용한다.
                `org.spring.boot`

        ** 변수 이름은 의미있고, 그 용도를 명확하게 설명해야 한다. **

         */




    }
}
